{"version":3,"sources":["components/elements/Header/header.js","components/elements/NotFound/notFound.js","config.js","components/elements/Navigation/navigation.js","components/elements/MovieThumb/movieThumb.js","components/elements/MovieInfo/movieInfo.js","helpers.js","components/elements/MovieInfoBar/movieInfoBar.js","components/elements/FourColGrid/fourColGrid.js","components/elements/Actor/actor.js","components/elements/Spinner/spinner.js","components/Movie/movie.js","components/elements/HeroImage/heroImage.js","components/elements/SearchBar/searchBar.js","components/elements/LoadMoreBtn/loadMoreBtn.js","components/Home/home.js","App.js","index.js"],"names":["Header","className","to","src","alt","NotFound","API_URL","API_KEY","IMAGE_BASE_URL","Navigation","props","movie","MovieThumb","clickable","pathname","movieId","movieName","image","MovieInfo","style","background","backdrop_path","poster_path","title","overview","min","max","optimum","low","high","value","vote_average","directors","length","map","element","i","key","name","size","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","FourColGrid","header","loading","children","prototypes","PropTypes","string","bool","Actor","actor","profile_path","character","Spinner","Movie","state","actors","fetchItems","endpoint","match","params","fetch","then","result","json","status_code","setState","crew","filter","member","job","cast","localStorage","setItem","JSON","stringify","catch","error","console","this","getItem","parse","location","runtime","Component","HeroImage","text","SearchBar","timeout","doSearch","event","target","clearTimeout","setTimeout","callback","type","placeholder","onChange","LoadMoreBtn","onClick","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","loadMoreItems","results","page","total_pages","original_title","id","App","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70b09ed6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"rmdb-header\">\r\n      <div className=\"rmdb-header-content\">\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"rmdb-logo\"\r\n            src=\"./images/reactMovie_logo.png\"\r\n            alt=\"rmbd-logo\"\r\n          />\r\n        </Link>\r\n        <img\r\n          className=\"rmdb-tmdb-logo\"\r\n          src=\"./images/tmdb_logo.png\"\r\n          alt=\"tmdb-logo\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Whoops. This Page doesnt exist</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","// Configuration for TMDB\r\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\r\n\r\nconst API_URL = \"https://api.themoviedb.org/3/\";\r\nconst API_KEY = \"13c2a4fea374a4b98b6f56416dd83f26\";\r\n\r\n// Images\r\n// An image URL looks like this example:\r\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\r\n\r\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\r\n\r\n//Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = \"w1280\";\r\n\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = \"w500\";\r\n\r\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = props => {\r\n  return (\r\n    <div className=\"rmdb-navigation\">\r\n      <div className=\"rmdb-navigation-content\">\r\n        <Link to=\"/\">\r\n          <p>Home</p>\r\n        </Link>\r\n        <p>/</p>\r\n        <p>{props.movie}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./MovieThumb.css\";\r\n\r\nconst MovieThumb = props => {\r\n  return (\r\n    <div className=\"rmdb-moviethumb\">\r\n      {props.clickable ? (\r\n        <Link\r\n          to={{\r\n            pathname: `/${props.movieId}`,\r\n            movieName: `${props.movieName}`\r\n          }}\r\n        >\r\n          <img src={props.image} alt=\"moviethumb\" />\r\n        </Link>\r\n      ) : (\r\n        <img src={props.image} alt=\"moviethumb\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nMovieThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  movieName: PropTypes.string\r\n};\r\n\r\nexport default MovieThumb;\r\n","import React from \"react\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../../config\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport MovieThumb from \"../MovieThumb/movieThumb\";\r\nimport \"./MovieInfo.css\";\r\n\r\nconst MovieInfo = props => {\r\n  return (\r\n    <div\r\n      className=\"rmdb-movieinfo\"\r\n      style={{\r\n        background: props.movie.backdrop_path\r\n          ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')`\r\n          : \"#000\"\r\n      }}\r\n    >\r\n      <div className=\"rmdb-movieinfo-content\">\r\n        <div className=\"rmdb-movieinfo-thumb\">\r\n          <MovieThumb\r\n            image={\r\n              props.movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`\r\n                : \"./images/no_image.jpg\"\r\n            }\r\n            clickable={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"rmdb-movieinfo-text\">\r\n          <h1>{props.movie.title}</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{props.movie.overview}</p>\r\n          <h3>IMDB RATING</h3>\r\n          <div className=\"rmdb-rating\">\r\n            <meter\r\n              min=\"0\"\r\n              max=\"100\"\r\n              optimum=\"100\"\r\n              low=\"40\"\r\n              high=\"70\"\r\n              value={props.movie.vote_average * 10}\r\n            ></meter>\r\n            <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n          </div>\r\n          {props.directors.length > 1 ? <h3>Directors</h3> : <h3>Director</h3>}\r\n          {props.directors.map((element, i) => {\r\n            return (\r\n              <p key={i} className=\"rmdb-director\">\r\n                {element.name}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n        <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfo;\r\n","// Convert time to hours and minutes\r\nexport const calcTime = time => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n};\r\n\r\n// Convert a number to $ format\r\nexport const convertMoney = money => {\r\n  var formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 0\r\n  });\r\n  return formatter.format(money);\r\n};\r\n","import React from \"react\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport { calcTime, convertMoney } from \"../../../helpers\";\r\nimport \"./MovieInfoBar.css\";\r\n\r\nconst MovieInfoBar = props => {\r\n  return (\r\n    <div className=\"rmdb-movieinfobar\">\r\n      <div className=\"rmdb-movieinfobar-content\">\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Running time:{calcTime(props.time)}\r\n          </span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Budget: {convertMoney(props.budget)}\r\n          </span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Revenue: {convertMoney(props.revenue)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfoBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./FourColGrid.css\";\r\n\r\nconst FourColGrid = props => {\r\n  const renderElement = () => {\r\n    const gridElement = props.children.map((element, i) => {\r\n      return (\r\n        <div key={i} className=\"rmdb-grid-element\">\r\n          {element}\r\n        </div>\r\n      );\r\n    });\r\n    return gridElement;\r\n  };\r\n  return (\r\n    <div className=\"rmdb-grid\">\r\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n      <div className=\"rmdb-grid-content\">{renderElement()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFourColGrid.prototypes = {\r\n  header: PropTypes.string,\r\n  loading: PropTypes.bool\r\n};\r\n\r\nexport default FourColGrid;\r\n","import React from \"react\";\r\nimport { IMAGE_BASE_URL } from \"../../../config\";\r\nimport \"./Actor.css\";\r\n\r\nconst Actor = props => {\r\n  const POSTER_SIZE = \"w154\";\r\n  return (\r\n    <div className=\"rmdb-actor\">\r\n      <img\r\n        src={\r\n          props.actor.profile_path\r\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}`\r\n            : \"./images/no_image.jpg\"\r\n        }\r\n        alt=\"actorthumb\"\r\n      />\r\n      <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n      <span className=\"rmdb-actor-character\">{props.actor.character} </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actor;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return <div className=\"loader\"></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport { API_URL, API_KEY } from \"../../config\";\r\nimport Navigation from \"../elements/Navigation/navigation\";\r\nimport MovieInfo from \"../elements/MovieInfo/movieInfo\";\r\nimport MovieInfoBar from \"../elements/MovieInfoBar/movieInfoBar\";\r\nimport FourColGrid from \"../elements/FourColGrid/fourColGrid\";\r\nimport Actor from \"../elements/Actor/actor\";\r\nimport Spinner from \"../elements/Spinner/spinner\";\r\nimport \"./Movie.css\";\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false\r\n  };\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    if (localStorage.getItem(`${movieId}`)) {\r\n      const state = JSON.parse(localStorage.getItem(`${movieId}`));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true });\r\n      let endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  fetchItems = endpoint => {\r\n    const { movieId } = this.props.match.params;\r\n    fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        if (result.status_code) {\r\n          this.setState({ loading: false });\r\n        } else {\r\n          this.setState({ movie: result }, () => {\r\n            const endpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n            fetch(endpoint)\r\n              .then(result => result.json())\r\n              .then(result => {\r\n                const directors = result.crew.filter(\r\n                  member => member.job === \"Director\"\r\n                );\r\n                this.setState(\r\n                  {\r\n                    actors: result.cast,\r\n                    directors,\r\n                    loading: false\r\n                  },\r\n                  () => {\r\n                    localStorage.setItem(\r\n                      `${movieId}`,\r\n                      JSON.stringify(this.state)\r\n                    );\r\n                  }\r\n                );\r\n              });\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-movie\">\r\n        {this.state.movie ? (\r\n          <div>\r\n            <Navigation movie={this.props.location.movieName} />\r\n            <MovieInfo\r\n              movie={this.state.movie}\r\n              directors={this.state.directors}\r\n            />\r\n            <MovieInfoBar\r\n              time={this.state.movie.runtime}\r\n              budget={this.state.movie.budget}\r\n              revenue={this.state.movie.revenue}\r\n            />\r\n          </div>\r\n        ) : null}\r\n        {this.state.actors ? (\r\n          <div className=\"rmdb-movie-grid\">\r\n            <FourColGrid header={\"Actors\"}>\r\n              {this.state.actors.map((element, i) => {\r\n                return <Actor key={i} actor={element} />;\r\n              })}\r\n            </FourColGrid>\r\n          </div>\r\n        ) : null}\r\n        {!this.state.actors && !this.state.loading ? (\r\n          <h1>No Movie Found!</h1>\r\n        ) : null}\r\n        {this.state.loading ? <Spinner /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport \"./HeroImage.css\";\r\n\r\nconst HeroImage = props => {\r\n  return (\r\n    <div\r\n      className=\"rmdb-heroimage\"\r\n      style={{\r\n        background: `linear-gradient(to bottom, rgba(0, 0, 0, 0)\r\n        39%, rgba(0, 0, 0, 0)\r\n    41%, rgba(0, 0, 0, 0.65)\r\n    100%),\r\n    url('${props.image}'), #1c1c1c`\r\n      }}\r\n    >\r\n      <div className=\"rmdb-heroimage-content\">\r\n        <div className=\"rmdb-heroimage-text\">\r\n          <h1>{props.title}</h1>\r\n          <p>{props.text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroImage;\r\n","import React, { Component } from \"react\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    value: \"\"\r\n  };\r\n\r\n  timeout = null;\r\n\r\n  doSearch = event => {\r\n    this.setState({ value: event.target.value });\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      this.props.callback(this.state.value);\r\n    }, 500);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-searchbar\">\r\n        <div className=\"rmdb-searchbar-content\">\r\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n          <input\r\n            type=\"text\"\r\n            className=\"rmdb-searchbar-input\"\r\n            placeholder=\"Search\"\r\n            onChange={this.doSearch}\r\n            value={this.state.value}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./LoadMoreBtn.css\";\r\n\r\nconst LoadMoreBtn = props => {\r\n  return (\r\n    <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n      <p>{props.text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadMoreBtn;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  POSTER_SIZE,\r\n  BACKDROP_SIZE\r\n} from \"../../config\";\r\nimport HeroImage from \"../elements/HeroImage/heroImage\";\r\nimport SearchBar from \"../elements/SearchBar/searchBar\";\r\nimport FourColGrid from \"../elements/FourColGrid/fourColGrid\";\r\nimport MovieThumb from \"../elements/MovieThumb/movieThumb\";\r\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/loadMoreBtn\";\r\nimport Spinner from \"../elements/Spinner/spinner\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"HomeState\")) {\r\n      const state = JSON.parse(localStorage.getItem(\"HomeState\"));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true });\r\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  searchItems = searchTerm => {\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm\r\n    });\r\n    if (searchTerm === \"\") {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  loadMoreItems = () => {\r\n    let endpoint = \"\";\r\n    this.setState({ loading: true });\r\n\r\n    if (this.state.searchTerm === \"\") {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this\r\n        .state.currentPage + 1}`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${\r\n        this.state.searchTerm\r\n      }&page=${this.state.currentPage + 1}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  fetchItems = endpoint => {\r\n    fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        this.setState(\r\n          {\r\n            movies: [...this.state.movies, ...result.results],\r\n            heroImage: this.state.heroImage || result.results[0],\r\n            loading: false,\r\n            currentPage: result.page,\r\n            totalPages: result.total_pages\r\n          },\r\n          () => {\r\n            if (this.state.searchTerm === \"\") {\r\n              localStorage.setItem(\"HomeState\", JSON.stringify(this.state));\r\n            }\r\n          }\r\n        );\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"rmbd-home\">\r\n        {this.state.heroImage ? (\r\n          <div>\r\n            <HeroImage\r\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n              title={this.state.heroImage.original_title}\r\n              text={this.state.heroImage.overview}\r\n            />\r\n            <SearchBar callback={this.searchItems} />\r\n          </div>\r\n        ) : null}\r\n        <div className=\"rmdb-home-grid\">\r\n          <FourColGrid\r\n            header={this.state.searchTerm ? \"Search Result\" : \"Popular Movies\"}\r\n            loading={this.state.loading}\r\n          >\r\n            {this.state.movies.map((element, i) => {\r\n              return (\r\n                <MovieThumb\r\n                  key={i}\r\n                  clickable={true}\r\n                  image={\r\n                    element.poster_path\r\n                      ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\r\n                      : \"./images/no_image.jpg\"\r\n                  }\r\n                  movieId={element.id}\r\n                  movieName={element.original_title}\r\n                ></MovieThumb>\r\n              );\r\n            })}\r\n          </FourColGrid>\r\n          {this.state.loading ? <Spinner /> : null}\r\n          {this.state.currentPage <= this.state.totalPages &&\r\n          !this.state.loading ? (\r\n            <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Header from \"./components/elements/Header/header\";\nimport NotFound from \"./components/elements/NotFound/notFound\";\nimport Movie from \"./components/Movie/movie\";\nimport Home from \"./components/Home/home\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <React.Fragment>\n        <Header />\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/:movieId\" component={Movie} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </React.Fragment>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}